@using EnterpriseWebApp.Models.Attributes;
@using System.Reflection
@model IEnumerable<EnterpriseWebApp.Models.IDataEntityObjects>

@{
	//ViewData["Title"] = "Patients";
}
@*
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
*@


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
@*<environment names="Development">
	<script type="text/javascript"  src="~/Views/Home/jsScript.js"></script>
	<script src="~/Views/css/styleSheet.css"></script>
</environment>
*@


@*@section Scripts {
	<script type="text/javascript" src="~/Views/js/jsScript.js"></script>
}
*@
@*<environment names="Development">
	<link rel="stylesheet" href="~/Views/js/jsScript.js">
	<link rel="stylesheet" href="~/Views/css/styleSheet.css">
</environment>
*@

@{
	var displayProps = Model.GetType().GetGenericArguments().Single().GetProperties()
							.Where(prop => Attribute.IsDefined(prop, typeof(ModelViewColumnAttribute))
											&& (prop.GetCustomAttribute<ModelViewColumnAttribute>()!.ToDisplay))
							.Select(p => p);
}

<h1>@ViewData["Title"]</h1>


<div style="padding:100px">
	<h4></h4>

	<table class="table table-hover table-fixed table-striped table-bordered" id="dataTable">
		<thead class="thead-dark">
			<tr>

				@{
					foreach (var prop in displayProps)
					{
						var displayName = prop.GetCustomAttribute<ModelViewColumnAttribute>()!.DisplayName ?? prop.Name;
						<th scope="col">@displayName</th>
					}
				}
			</tr>
		</thead>
		<tbody>

			@foreach (var m in Model)
			{
				<tr>
					@foreach (var prop in displayProps)
					{
						<td>@prop.GetValue(m)</td>
					}
				</tr>
			}
		</tbody>
	</table>
</div>
